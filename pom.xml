<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<groupId>org.n52</groupId>
		<artifactId>52-North</artifactId>
		<version>4</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.n52.swe.sos</groupId>
	<artifactId>52n-sos</artifactId>
	<packaging>pom</packaging>
	<version>3.1</version>
	<name>52North Sensor Observation Service</name>
	<description>52North Sensor Observation Service - Parent POM for defining dependency versions</description>

	<modules>
		<module>52n-sos-ogc</module>
		<module>52n-sos-core</module>
		<module>52n-sos-coding</module>
		<module>52n-sos-service</module>
	</modules>

	<properties>

		<!--
			################################################ ##SOME OF THE
			FOLLOWING PROPERTIES HAVE TO BE CHANGED!!! ##
			##################################################
		-->
		<!--
			DNS name or IP of the target host **PLEASE CHANGE, IF NECESSARY**
		-->
		<deploy.target.host>localhost</deploy.target.host>

		<!-- Port of the target host **PLEASE CHANGE, IF NECESSARY**-->
		<deploy.target.port>8080</deploy.target.port>
		<!-- deploy.target.port>9090</deploy.target.port-->

		<!-- URL pointing to Tomcat Manager -->
		<deploy.tomcat.manager.url>http://${deploy.target.host}:${deploy.target.port}/manager/html/</deploy.tomcat.manager.url>
		<!-- deploy.tomcat.manager.url>http://${deploy.target.host}:${deploy.target.port}/manager/</deploy.tomcat.manager.url> -->
		<!-- Tomcat Manager username **HAS TO BE CHANGED**-->
		<deploy.tomcat.manager.username>tomcat</deploy.tomcat.manager.username>
		<!-- deploy.tomcat.manager.username>tomcatadmin</deploy.tomcat.manager.username-->

		<!-- Tomcat Manager password **HAS TO BE CHANGED**-->
		<deploy.tomcat.manager.password>1234</deploy.tomcat.manager.password>
		<!-- deploy.tomcat.manager.password>admin</deploy.tomcat.manager.password-->
		<!--
			installation directory of the tomcat servlet engine **HAS TO BE
			CHANGED, IF NECESSARY**
		-->
		<!--  deploy.tomcat.home>/usr/share/tomcat7</deploy.tomcat.home>-->
		<deploy.tomcat.home>C:\Program Files\Apache Software Foundation\Tomcat 7.0</deploy.tomcat.home>

		<!--connectionstring to the DB **HAS TO BE CHANGED** -->
		<conf.sos.ds.connectionstring>
			jdbc:postgresql://....
		</conf.sos.ds.connectionstring>

		<!-- your DB-username **HAS TO BE CHANGED** -->
		<conf.sos.ds.user>..</conf.sos.ds.user>

		<!-- your DB-password **HAS TO BE CHANGED** -->
		<conf.sos.ds.password>..</conf.sos.ds.password>


		<!--
			###########################################################
			##FOLLOWING PROPERTIES ONLY TO BE CHANGED FOR ADVANCED USERS!!! ##
			##################################################
		-->

		<!--
			class of the capabilities cache controller
		-->
		<conf.sos.capabilitiesCacheController>org.n52.sos.cache.CapabilitiesCacheController</conf.sos.capabilitiesCacheController>

		<!--
			Capabilities Cache Update Interval in minutes (0 = no automatic
			update!)
		-->
		<conf.sos.capabilitiesCacheUpdateInterval>5</conf.sos.capabilitiesCacheUpdateInterval>

		<!--
			DAOFactory instance configuration (ADVANCED) put in the class name of
			the specific DAOFactory implementation including the packagename
			change only if you have another implementation of the data access
			objects (e.g. for an Oracle database)!
		-->
		<!--
			classname of the JDBC Driver (ADVANCED) example for postgre:
			org.postgresql.Driver change only if you are using another database
		-->
		<conf.sos.ds.driver>org.postgresql.Driver
		</conf.sos.ds.driver>


		<!--
			the initial number of connections available in the connection pool of
			this SOS (OPTIONAL)
		-->
		<conf.sos.ds.initcon>10</conf.sos.ds.initcon>

		<!--
			the max number of connections available in the connection pool of
			this SOS (OPTIONAL)
		-->
		<conf.sos.ds.maxcon>50</conf.sos.ds.maxcon>

		<!--
			comma seperated list of the class names of the listeners, including
			the package name (no whitespace allowed!) (ADVANCED)
		-->
		<conf.sos.listeners>
			org.n52.sos.GetCapabilitiesListener,org.n52.sos.GetObservationListener,org.n52.sos.DescribeSensorListener,org.n52.sos.GetResultListener,org.n52.sos.GetFeatureOfInterestListener,org.n52.sos.GetFeatureOfInterestTimeListener,org.n52.sos.GetDomainFeatureListener,org.n52.sos.UpdateSensorListener,org.n52.sos.InsertObservationListener,org.n52.sos.RegisterSensorListener,org.n52.sos.DescribeFeatureTypeListener
		</conf.sos.listeners>

		<!--
			absoulte path and name of the skeleton file for the capabilities
			document (OPTIONAL)
		-->
		<conf.sos.skeletonfile>
			/WEB-INF/conf/capabilities/capabilities_skeleton.xml
		</conf.sos.skeletonfile>

		<!--
			absoulte path and name of the skeleton file for the capabilities
			document mobile (OPTIONAL)
		-->
		<conf.sos.skeletonfilemobile>
			/WEB-INF/conf/capabilities/capabilities_skeleton_mobile.xml
		</conf.sos.skeletonfilemobile>

		<!--
			absoulte path of the directory with the sensor descriptions in
			sensorML format (OPTIONAL)
		-->
		<conf.sos.sensordir>
			/home/...
		</conf.sos.sensordir>
		<!--
			implementation of IOMEncoder used to encode observations (has to be
			reimplemented, if new observation types should be supported)
		-->
		<conf.sos.omEncoder>org.n52.sos.encode.impl.OMEncoder
		</conf.sos.omEncoder>

		<!-- GMLEncoder implementation (implementation of IGMLEncoder) -->
		<conf.sos.gmlEncoder>org.n52.sos.encode.impl.GMLEncoder
		</conf.sos.gmlEncoder>

		<!--
			HttpPostRequestDecoder implementation (implementation of
			IHttpPostRequestDecoder)
		-->
		<conf.sos.postRequestDecoder>
			org.n52.sos.decode.impl.HttpPostRequestDecoderMobile
		</conf.sos.postRequestDecoder>

		<!--
			HttpGetRequestDecoder implementation (implementation of
			IHttpGetRequestDecoder)
		-->
		<conf.sos.getRequestDecoder>
			org.n52.sos.decode.impl.HttpGetRequestDecoderMobile
		</conf.sos.getRequestDecoder>

		<!--
			ResponseEncoder implementation (implementation of IResponseEncoder)
		-->
		<conf.sos.getResponseEncoder>
			org.n52.sos.encode.impl.SosResponseEncoder
		</conf.sos.getResponseEncoder>

		<!--
			SensorMLEncoder implementation (implementation of ISensorMLEncoder)
		-->
		<conf.sos.sensorMLEncoder>org.n52.sos.encode.impl.SensorMLEncoder
		</conf.sos.sensorMLEncoder>

		<!--
			property indicates, whether SOS supports mobile requests ; (default
			:= true)
		-->
		<conf.sos.mobileEnabled>true</conf.sos.mobileEnabled>

		<!--
			gml date format OPTIONAL if not set, response time is iso formatted
			(yyy-MM-dd'T'HH:mm:ss.SSSZZ). example: 2005-12-14T12:14:39.000+01:00
		-->
		<conf.sos.gmlDateFormat>
		</conf.sos.gmlDateFormat>

		<!-- character encoding for response documents (ADVANCED) -->
		<conf.sos.characterEncoding>UTF-8</conf.sos.characterEncoding>

		<!-- prefix URN for the spatial reference system (ADVANCED) -->
		<conf.sos.srs.prefix>urn:ogc:def:crs:EPSG</conf.sos.srs.prefix>

		<!--
			property indicates, whether SOS supports quality informations in
			observations or not; (default := false)
		-->
		<conf.sos.supportsQuality>false</conf.sos.supportsQuality>

		<!--
			property keeps a list of all EPSG codes for which the SOS has to
			switch coordinates from long/lat to lat/long
		-->
		<conf.sos.switchCoordinatesForEPSG>2044-2045;2081-2083;2085-2086;2093;2096-2098;2105-2132;2169-2170;2176-2180;2193;2200;2206-2212;2319;2320-2462;2523-2549;2551-2735;2738-2758;2935-2941;2953;3006-3030;3034-3035;3058-3059;3068;3114-3118;3126-3138;3300-3301;3328-3335;3346;3350-3352;3366;3416;4001-4999;20004-20032;20064-20092;21413-21423;21473-21483;21896-21899;22171;22181-22187;22191-22197;25884;27205-27232;27391-27398;27492;28402-28432;28462-28492;30161-30179;30800;31251-31259;31275-31279;31281-31290;31466-31700</conf.sos.switchCoordinatesForEPSG>

		<!--
			property indicates, whether SOS encodes the complete FOI-instance
			within an Observation instance or just the FOI id; (default := true)
		-->
		<conf.sos.foiEncodedInObservation>true
		</conf.sos.foiEncodedInObservation>

		<!--
			time of lease for result template in getResult operation (in minutes)
		-->
		<conf.sos.result.lease>600</conf.sos.result.lease>

		<!-- token seperator in result element -->
		<conf.sos.result.tokenseperator>,</conf.sos.result.tokenseperator>

		<!--
			tuple seperator in result element ('@@' is NOT a valid Maven value!!)
		-->
		<conf.sos.result.tupleseperator>;</conf.sos.result.tupleseperator>

		<!-- decimal separator in result element -->
		<conf.sos.result.decimalSeparator>.
		</conf.sos.result.decimalSeparator>

		<!--
			no data value for result string containing the values in common
			observation and getResult response
		-->
		<conf.sos.result.nodatavalue>noData
		</conf.sos.result.nodatavalue>

		<!-- version of this service -->
		<conf.sos.serviceversion>1.0.0</conf.sos.serviceversion>

		<!-- capabilities settings -->
		<conf.sos.capabilities.provider.name>Research Center Juelich IBG-3</conf.sos.capabilities.provider.name>
		<conf.sos.capabilities.provider.site>http://www.fz-juelich.de</conf.sos.capabilities.provider.site>
		<conf.sos.capabilities.provider.individual.name>Juergen Sorg</conf.sos.capabilities.provider.individual.name>
		<conf.sos.capabilities.provider.position.name>Developer</conf.sos.capabilities.provider.position.name>
		<conf.sos.capabilities.provider.phone>+49(0)2461/61 5535</conf.sos.capabilities.provider.phone>
		<conf.sos.capabilities.provider.address>Wilhelm-Johnen-Strasse</conf.sos.capabilities.provider.address>
		<conf.sos.capabilities.provider.city>Juelich</conf.sos.capabilities.provider.city>
		<conf.sos.capabilities.provider.zip>52428</conf.sos.capabilities.provider.zip>
		<conf.sos.capabilities.provider.state>North Rhine-Westphalia</conf.sos.capabilities.provider.state>
		<conf.sos.capabilities.provider.country>Germany</conf.sos.capabilities.provider.country>
		<conf.sos.capabilities.provider.email>j.sorg@fz-juelich.de</conf.sos.capabilities.provider.email>

		<!-- URL of SOS web application -->
		<conf.sos.service.url>http://${deploy.target.host}:${deploy.target.port}/${conf.sos.name}</conf.sos.service.url>

		<!-- Logger configuration -->
		<!--<conf.sos.logdir>/var/log/tomcat7/${conf.sos.name}.log</conf.sos.logdir>-->
		<conf.sos.logdir>/var/log/tomcat7/${conf.sos.name}.log</conf.sos.logdir>
		<conf.sos.loglevel>DEBUG</conf.sos.loglevel>

	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>2.4</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.xmlbeans</groupId>
				<artifactId>xmlbeans</artifactId>
				<version>2.3.0</version>
			</dependency>
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>1.2.14</version>
			</dependency>
			<dependency>
				<groupId>commons-dbcp</groupId>
				<artifactId>commons-dbcp</artifactId>
				<version>1.2.2</version>
			</dependency>
			<dependency>
				<groupId>com.vividsolutions</groupId>
				<artifactId>jts</artifactId>
				<version>1.10</version>
			</dependency>
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>1.6</version>
			</dependency>

			<!-- XML Beans Generated Classes -->
			<dependency>
				<groupId>${pom.groupId}</groupId>
				<artifactId>52n-sos-xml-gml</artifactId>
				<version>3.1.1</version>
			</dependency>
			<dependency>
				<groupId>${pom.groupId}</groupId>
				<artifactId>52n-sos-xml-sweCommon</artifactId>
				<version>1.0.1</version>
			</dependency>
			<dependency>
				<groupId>${pom.groupId}</groupId>
				<artifactId>52n-sos-xml-sensorML</artifactId>
				<version>1.0.1</version>
			</dependency>
			<dependency>
				<groupId>${pom.groupId}</groupId>
				<artifactId>52n-sos-xml-om</artifactId>
				<version>1.0.0</version>
			</dependency>
			<dependency>
				<groupId>${pom.groupId}</groupId>
				<artifactId>52n-sos-xml-ows</artifactId>
				<version>1.1.0</version>
			</dependency>
			<dependency>
				<groupId>${pom.groupId}</groupId>
				<artifactId>52n-sos-xml-sos</artifactId>
				<version>1.0.0</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<compilerVersion>1.6</compilerVersion>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<plugin>
				<!--
					execute "install" goal during release:prepare (instead of
					"integration-test")
				-->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<preparationGoals>clean install</preparationGoals>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<!--
		SVN connection <scm>
		<developerConnection>scm:svn:https://52north.org/svn/swe/main/SOS/Service/trunk</developerConnection>
		<url>https://52north.org/svn/swe/main/SOS/Service/trunk</url> </scm>
	-->

	<profiles>
		<profile>
			<id>env-dev</id>
			<!--
				This is the development profile, per default it points to a
				build.properties file in the user home, but this can be changed
				localy by specifiying the property local.configfile with its own
				string.
			-->
			<activation>
				<property>
					<name>env</name>
					<value>dev</value>
				</property>
			</activation>
			<properties>
				<local.configfile>${user.home}/build.properties</local.configfile>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>properties-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>initialize</phase>
								<goals>
									<goal>read-project-properties</goal>
								</goals>
								<configuration>
									<files>
										<file>${local.configfile}</file>
									</files>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- Profile for deploy with PostGIS -->
		<profile>
			<id>-deploy</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<modules>
				<module>52n-sos-dao-postgis</module>
			</modules>
			<properties>
				<dssos.config.file.name>dssos.config</dssos.config.file.name>
				<conf.sos.name>ibg3sosV311</conf.sos.name>
				<conf.sos.ds.daofactory>org.n52.sos.ds.pgsql.PGSQLDAOFactory</conf.sos.ds.daofactory>
			</properties>
		</profile> 
		<!-- Profile for deploy with WFS and PostGIS -->
		<profile>
			<id>with-deploy-wfs</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<modules>
				<module>../52n-sos-wfs-connector</module>
			</modules>
			<properties>
			<dssos.config.file.name>dssosWithWfs.config</dssos.config.file.name>
				<conf.sos.name>52nSosWfsV3</conf.sos.name>
				<conf.sos.ds.daofactory>org.n52.sos.ds.wfs.WFSPGSQLDAOFactory
			</conf.sos.ds.daofactory>
					<!-- WFS url, username and password (MANDATORY) -->
					<conf.sos.ds.wfs.url>http://localhost:8080/geoserver/wfs?</conf.sos.ds.wfs.url>
					<conf.sos.ds.wfs.user>wfs</conf.sos.ds.wfs.user>
					<conf.sos.ds.wfs.password>******</conf.sos.ds.wfs.password>
					<conf.sos.ds.wfs.gzip>false</conf.sos.ds.wfs.gzip>
					<!-- column names for ID and Geometry (!!! SAME FOR ALL FEATURE TYPES!!!) (MANDATORY) -->
					<conf.sos.ds.wfs.id>id</conf.sos.ds.wfs.id>
					<conf.sos.ds.wfs.geometry>geom</conf.sos.ds.wfs.geometry>
					<!-- feature type prefix (WFS = workspace) (MANDATORY)-->
					<conf.sos.ds.wfs.prefix>n52</conf.sos.ds.wfs.prefix>
					<!-- feature types (WFS = layers) for fois as List, separated by ',' (MANDATORY)-->
					<conf.sos.ds.wfs.fois>feature_of_interest_point,feature_of_interest_polygon</conf.sos.ds.wfs.fois>
					<!-- feature types (WFS = layers) for dfs as List, separated by ','(MANDATORY) -->
					<conf.sos.ds.wfs.domainfeatures>domain_feature</conf.sos.ds.wfs.domainfeatures>
			</properties>
		</profile>
	</profiles>
</project>